Apex Koans - Readme
===================

§0. Introduction
----------------

The Apex language is the basis language for object-orientated development on the Salesforce Force.com platform. It is rapidly growing in popularity and has is attracting a high number of users and business drawn to its very rapid development model.

I was recently running a training and induction course for a series of new graduates my employer had brought on and was extolling the virtues of the koan systems out there for languages such as Ruby, .Net and Java, all of which I have used and thought were very instructive. The group asked if such a set existed for Apex and Force.com and I realised there was nothing for them to use. This set of classes is the basic building foundation for this. 

The target audience is administrators or developers new to the platform who wish to learn the fundamentals of Apex. The classes should be dropped into a Salesforce developer org and then worked on a class at a time. I have yet to decide upon a specific order, but may attempt to formalise one in the future.

§1. Installation
----------------

Simply push the classes up to a Salesforce developer org (get one from developer.force.com) and then choose a class and run the tests in it. I would recommend using Eclipse to work with the system as it provides the best experience (personally). The koans are written as a set of tests to fail, you need to fix them and in doing so learn about working with certain objects and structures on the platform. Through experimentation I have discovered that if you open the class in Eclipse and run its tests from there then you get the methods run in order, if you run them through the browser this is not necessarily so. Note that this may be me getting coincidental running orders, maybe someone could clarify from Salesforce?

§2. Contents/Material Covered
-----------------------------

(available)
Lists
Sets
(planned)
Maps
Logic
Enums
Primitives

§3. Future Plans
----------------

After the items above are covered I would be interested in any feedback provided in order to see what people would like for the rest of the koans. I am wary of just repeating the Ruby/Java/.Net koans in apex as the Force.com platform, apex and cloud computing are very different from other programming paradigms and I feel we could add greater value by exploring some of those different avenue.

§4. Contributing
----------------

I would welcome all input and help. Drop me a message and/or a pull request and hopefully we can grow this system :-)